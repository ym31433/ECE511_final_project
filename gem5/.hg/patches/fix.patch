# HG changeset patch
# Parent b938839e006e770a984aa907e0591234f591f791

diff --git a/SConstruct b/SConstruct
--- a/SConstruct
+++ b/SConstruct
@@ -1241,6 +1241,7 @@
     BoolVariable('CP_ANNOTATE', 'Enable critical path annotation capability', False),
     BoolVariable('USE_KVM', 'Enable hardware virtualized (KVM) CPU models', have_kvm),
     BoolVariable('BUILD_GPU', 'Build the compute-GPU model', False),
+    BoolVariable('BUILD_NPU', 'Build the npu model', False),
     EnumVariable('PROTOCOL', 'Coherence protocol for Ruby', 'None',
                   all_protocols),
     EnumVariable('BACKTRACE_IMPL', 'Post-mortem dump implementation',
diff --git a/build_opts/X86 b/build_opts/X86
--- a/build_opts/X86
+++ b/build_opts/X86
@@ -1,3 +1,4 @@
 TARGET_ISA = 'x86'
-CPU_MODELS = 'AtomicSimpleCPU,O3CPU,TimingSimpleCPU'
+BUILD_NPU = True
+CPU_MODELS = 'AtomicSimpleCPU,O3CPU,TimingSimpleCPU, NpuCPU'
 PROTOCOL = 'MI_example'
diff --git a/configs/common/CpuConfig.py b/configs/common/CpuConfig.py
--- a/configs/common/CpuConfig.py
+++ b/configs/common/CpuConfig.py
@@ -50,6 +50,7 @@
 _cpu_aliases_all = [
     ("timing", "TimingSimpleCPU"),
     ("atomic", "AtomicSimpleCPU"),
+    ("npu_cpu", "NpuCPU")
     ("minor", "MinorCPU"),
     ("detailed", "DerivO3CPU"),
     ("kvm", ("ArmKvmCPU", "ArmV8KvmCPU", "X86KvmCPU")),
diff --git a/configs/example/se.py b/configs/example/se.py
--- a/configs/example/se.py
+++ b/configs/example/se.py
@@ -41,6 +41,7 @@
 # Simple test script
 #
 # "m5 test.py"
+# test patch
 
 import optparse
 import sys
diff --git a/src/arch/arm/linux/process.cc b/src/arch/arm/linux/process.cc
--- a/src/arch/arm/linux/process.cc
+++ b/src/arch/arm/linux/process.cc
@@ -67,7 +67,7 @@
 
     strcpy(name->sysname, "Linux");
     strcpy(name->nodename, "m5.eecs.umich.edu");
-    strcpy(name->release, "3.0.0");
+    strcpy(name->release, "3.2.0");
     strcpy(name->version, "#1 Mon Aug 18 11:32:15 EDT 2003");
     strcpy(name->machine, "armv7l");
 
